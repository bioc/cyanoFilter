% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cluster_summary.R
\name{summary}
\alias{summary}
\title{takes a flowframes, a vector of channels, cluster indicator and return desired summaries per cluster}
\usage{
summary(
  object,
  channels = NULL,
  cluster_var = "Clusters",
  summary = c("mean", "median", "cov", "n"),
  ...
)
}
\arguments{
\item{object}{An object of class cyanoFilter to be summarised.}

\item{channels}{channels whose summaries are to be computed}

\item{cluster_var}{column name in expression matrix containing the cluter indicators}

\item{summary}{summary statistic of interest. Only mean and variance-covariance matrix supported at the moment.}

\item{...}{other arguments. Not used at the moment}
}
\description{
takes a flowframes, a vector of channels, cluster indicator and return desired summaries per cluster
}
\examples{

flowfile_path <- system.file("extdata", "B4_18_1.fcs", package = "cyanoFilter",
              mustWork = TRUE)
flowfile <- flowCore::read.FCS(flowfile_path, alter.names = TRUE,
                               transformation = FALSE, emptyValue = FALSE,
                               dataset = 1) #FCS file contains only one data object
flowfile_nona <- cyanoFilter::nona(x = flowfile)
flowfile_noneg <- cyanoFilter::noneg(x = flowfile_nona)
flowfile_logtrans <- cyanoFilter::lnTrans(x = flowfile_noneg, c('SSC.W', 'TIME'))
cells_nonmargin <- cellmargin(flowframe = flowfile_logtrans, Channel = 'SSC.W',
           type = 'estimate', y_toplot = "FSC.HLin")
cells_nodebris <- debris_nc(flowframe = cells_nonmargin$reducedflowframe,
                           ch_chlorophyll = "RED.B.HLin",
                            ch_p2 = "YEL.B.HLin",
                            ph = 0.05)
fin <- phyto_filter(flowfile = cells_nodebris$syn,
              pig_channels = c("RED.B.HLin", "YEL.B.HLin", "RED.R.HLin"),
              com_channels = c("FSC.HLin", "SSC.HLin"))

summary(object = fin$flowframe_proportion,
        channels = c("RED.B.HLin", "YEL.B.HLin", "RED.R.HLin"),
        cluster_var = "Clusters",
        summary = 'mean')

}
